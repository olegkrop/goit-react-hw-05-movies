{"version":3,"file":"static/js/355.7cf43d74.chunk.js","mappings":"uRAEMA,EAAM,mCACNC,EAAM,+BAENC,EAAiB,mCAAG,oGACHC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,uCAA+CD,IAD5C,cAClBI,EADkB,yBAEjBA,EAAOC,KAAKC,SAFK,2CAAH,qDAKvBC,QAAQC,IAAIN,KAEZ,IAAMO,EAAsB,mCAAG,WAAMC,GAAN,0EACxBA,EADwB,yCAEpB,IAFoB,uBAIRP,EAAAA,EAAAA,IAAA,UAChBF,EADgB,iCACYD,EADZ,kBACyBU,IALjB,cAIvBN,EAJuB,yBAOtBA,EAAOC,KAAKC,SAPU,2CAAH,sDAU5BC,QAAQC,IAAIC,EAAuB,SAEnC,IAAME,EAAe,mCAAG,WAAMC,GAAN,0EACjBA,EADiB,yCAEb,MAFa,uBAIDT,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA0BW,EAA1B,oBAA6CZ,IAJ5C,cAIhBI,EAJgB,yBAKfA,EAAOC,MALQ,2CAAH,sDAQrBE,QAAQC,IAAIG,EAAgB,WAE5B,IAAME,EAAe,mCAAG,WAAMD,GAAN,0EACjBA,EADiB,yCAEb,MAFa,uBAIDT,EAAAA,EAAAA,IAAA,UAChBF,EADgB,kBACHW,EADG,4BACwBZ,IALvB,cAIhBI,EAJgB,yBAOfA,EAAOC,KAAKS,MAPG,2CAAH,sDAUrBP,QAAQC,IAAIK,EAAgB,WAE5B,IAAME,EAAe,mCAAG,WAAMH,GAAN,0EACjBA,EADiB,yCAEb,MAFa,uBAIDT,EAAAA,EAAAA,IAAA,UAChBF,EADgB,kBACHW,EADG,4BACwBZ,IALvB,cAIhBI,EAJgB,yBAOfA,EAAOC,KAAKC,SAPG,2CAAH,sDAUrBC,QAAQC,IAAIO,EAAgB,U,sICvD5B,EAA4B,gCAA5B,EAAmE,2BAAnE,EAAqG,2BAArG,EAAyI,6BAAzI,EAA6K,2B,SCuC7K,EAnCqB,WACnB,IAAQH,GAAYI,EAAAA,EAAAA,MAAZJ,QACR,GAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACR,GAAKR,EAAL,CAGA,IAAMS,EAAiB,mCAAG,qGACHN,EAAAA,EAAAA,IAAgBH,GADb,OAClBR,EADkB,OAExBe,EAAWf,GAFa,2CAAH,qDAIvBiB,GALC,CAMF,GAAE,CAACT,KAGF,gBAAKU,UAAWC,EAAhB,SACGL,EAAQM,QACP,eAAIF,UAAWC,EAAf,SACGL,EAAQO,KAAI,SAAAC,GACX,OACE,gBAAoBJ,UAAWC,EAA/B,WACE,eAAGD,UAAWC,EAAd,qBAAqCG,EAAOC,WAC5C,cAAGL,UAAWC,EAAd,SAA2BG,EAAOE,YAF3BF,EAAOG,GAKnB,MAGH,4CAIP,C","sources":["api.js","components/MovieReviews/MovieReviews.module.css","components/MovieReviews/MovieReviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '650ee73e57e26be696a7074fb8f61e89';\nconst URL = 'https://api.themoviedb.org/3';\n\nconst getTrendingMovies = async () => {\n  const result = await axios.get(`${URL}/trending/movie/day?api_key=${KEY}`);\n  return result.data.results;\n};\n\nconsole.log(getTrendingMovies());\n\nconst getMoviesBySearchQuery = async searchQuery => {\n  if (!searchQuery) {\n    return [];\n  }\n  const result = await axios.get(\n    `${URL}/search/movie?api_key=${KEY}&query=${searchQuery}`\n  );\n  return result.data.results;\n};\n\nconsole.log(getMoviesBySearchQuery('Dune'));\n\nconst getMovieDetails = async movieId => {\n  if (!movieId) {\n    return null;\n  }\n  const result = await axios.get(`${URL}/movie/${movieId}?api_key=${KEY}`);\n  return result.data;\n};\n\nconsole.log(getMovieDetails('438631'));\n\nconst getMovieCredits = async movieId => {\n  if (!movieId) {\n    return null;\n  }\n  const result = await axios.get(\n    `${URL}/movie/${movieId}/credits?api_key=${KEY}`\n  );\n  return result.data.cast;\n};\n\nconsole.log(getMovieCredits('438631'));\n\nconst getMovieReviews = async movieId => {\n  if (!movieId) {\n    return null;\n  }\n  const result = await axios.get(\n    `${URL}/movie/${movieId}/reviews?api_key=${KEY}`\n  );\n  return result.data.results;\n};\n\nconsole.log(getMovieReviews('438631'));\n\nexport {\n  getTrendingMovies,\n  getMoviesBySearchQuery,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieReviews_container__WSgYJ\",\"list\":\"MovieReviews_list__OWmvA\",\"item\":\"MovieReviews_item__zss4K\",\"author\":\"MovieReviews_author__kSBQA\",\"text\":\"MovieReviews_text__Z+nWE\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'api';\nimport style from './MovieReviews.module.css';\n\nconst MovieReviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    const fetchMovieReviews = async () => {\n      const result = await getMovieReviews(movieId);\n      setReviews(result);\n    };\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div className={style.container}>\n      {reviews.length ? (\n        <ul className={style.list}>\n          {reviews.map(review => {\n            return (\n              <li key={review.id} className={style.item}>\n                <p className={style.author}>Author: {review.author}</p>\n                <p className={style.text}>{review.content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        'We don`t have any reviews for this movie'\n      )}\n    </div>\n  );\n};\n\nexport default MovieReviews;\n"],"names":["KEY","URL","getTrendingMovies","axios","result","data","results","console","log","getMoviesBySearchQuery","searchQuery","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","useParams","useState","reviews","setReviews","useEffect","fetchMovieReviews","className","style","length","map","review","author","content","id"],"sourceRoot":""}