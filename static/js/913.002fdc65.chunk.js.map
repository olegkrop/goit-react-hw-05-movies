{"version":3,"file":"static/js/913.002fdc65.chunk.js","mappings":"+SAEMA,EAAM,mCACNC,EAAM,+BAENC,EAAiB,mCAAG,oGACHC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,uCAA+CD,IAD5C,cAClBI,EADkB,yBAEjBA,EAAOC,KAAKC,SAFK,2CAAH,qDAKjBC,EAAsB,mCAAG,WAAMC,GAAN,0EACxBA,EADwB,yCAEpB,IAFoB,uBAIRL,EAAAA,EAAAA,IAAA,UAChBF,EADgB,iCACYD,EADZ,kBACyBQ,IALjB,cAIvBJ,EAJuB,yBAOtBA,EAAOC,KAAKC,SAPU,2CAAH,sDAUtBG,EAAe,mCAAG,WAAMC,GAAN,0EACjBA,EADiB,yCAEb,MAFa,uBAIDP,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA0BS,EAA1B,oBAA6CV,IAJ5C,cAIhBI,EAJgB,yBAKfA,EAAOC,MALQ,2CAAH,sDAQfM,EAAe,mCAAG,WAAMD,GAAN,0EACjBA,EADiB,yCAEb,MAFa,uBAIDP,EAAAA,EAAAA,IAAA,UAChBF,EADgB,kBACHS,EADG,4BACwBV,IALvB,cAIhBI,EAJgB,yBAOfA,EAAOC,KAAKO,MAPG,2CAAH,sDAUfC,EAAe,mCAAG,WAAMH,GAAN,0EACjBA,EADiB,yCAEb,MAFa,uBAIDP,EAAAA,EAAAA,IAAA,UAChBF,EADgB,kBACHS,EADG,4BACwBV,IALvB,cAIhBI,EAJgB,yBAOfA,EAAOC,KAAKC,SAPG,2CAAH,qD,sICrCrB,EAA4B,6BAA5B,EAAgE,wBAAhE,EAA+F,wBAA/F,EAAsI,gCAAtI,EAAoL,+BAApL,EAAqO,mC,SCgDrO,EAzCkB,WAChB,IAAQI,GAAYI,EAAAA,EAAAA,MAAZJ,QACR,GAAwBK,EAAAA,EAAAA,UAAS,IAAjC,eAAOH,EAAP,KAAaI,EAAb,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACR,GAAKP,EAAL,CAGA,IAAMQ,EAAc,mCAAG,qGACAP,EAAAA,EAAAA,IAAgBD,GADhB,OACfN,EADe,OAErBY,EAAQZ,GAFa,2CAAH,qDAIpBc,GALC,CAMF,GAAE,CAACR,KAGF,gBAAKS,UAAWC,EAAhB,UACE,eAAID,UAAWC,EAAf,SACGR,EAAKS,KAAI,SAAAC,GACR,IAAMC,EAASD,EAAME,aAAN,yCACuBF,EAAME,cAtBpD,wGAwBQ,OACE,gBAAmBL,UAAWC,EAA9B,WACE,gBACEK,IAAKF,EACLG,IAAKJ,EAAMK,KACXR,UAAWC,KAEb,cAAGD,UAAWC,EAAd,SAAkCE,EAAMK,QACxC,eAAGR,UAAWC,EAAd,wBACcE,EAAMM,eARbN,EAAMO,GAYlB,OAIR,C","sources":["api.js","webpack://goit-react-hw-05-movies/./src/components/MovieCast/MovieCast.module.css?c01c","components/MovieCast/MovieCast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '650ee73e57e26be696a7074fb8f61e89';\nconst URL = 'https://api.themoviedb.org/3';\n\nconst getTrendingMovies = async () => {\n  const result = await axios.get(`${URL}/trending/movie/day?api_key=${KEY}`);\n  return result.data.results;\n};\n\nconst getMoviesBySearchQuery = async searchQuery => {\n  if (!searchQuery) {\n    return [];\n  }\n  const result = await axios.get(\n    `${URL}/search/movie?api_key=${KEY}&query=${searchQuery}`\n  );\n  return result.data.results;\n};\n\nconst getMovieDetails = async movieId => {\n  if (!movieId) {\n    return null;\n  }\n  const result = await axios.get(`${URL}/movie/${movieId}?api_key=${KEY}`);\n  return result.data;\n};\n\nconst getMovieCredits = async movieId => {\n  if (!movieId) {\n    return null;\n  }\n  const result = await axios.get(\n    `${URL}/movie/${movieId}/credits?api_key=${KEY}`\n  );\n  return result.data.cast;\n};\n\nconst getMovieReviews = async movieId => {\n  if (!movieId) {\n    return null;\n  }\n  const result = await axios.get(\n    `${URL}/movie/${movieId}/reviews?api_key=${KEY}`\n  );\n  return result.data.results;\n};\n\nexport {\n  getTrendingMovies,\n  getMoviesBySearchQuery,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieCast_container__+aUR4\",\"list\":\"MovieCast_list__ZRqM9\",\"item\":\"MovieCast_item__hB21P\",\"actor__image\":\"MovieCast_actor__image__IEnDC\",\"actor__text\":\"MovieCast_actor__text__oVdbK\",\"character__text\":\"MovieCast_character__text__dbmWZ\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'api';\nimport style from './MovieCast.module.css';\n\nconst IMAGE_PLACEHOLDER =\n  'https://upload.wikimedia.org/wikipedia/commons/thumb/b/bc/Unknown_person.jpg/694px-Unknown_person.jpg';\n\nconst MovieCast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    const fetchMovieCast = async () => {\n      const result = await getMovieCredits(movieId);\n      setCast(result);\n    };\n    fetchMovieCast();\n  }, [movieId]);\n\n  return (\n    <div className={style.container}>\n      <ul className={style.list}>\n        {cast.map(actor => {\n          const imgUrl = actor.profile_path\n            ? `http://image.tmdb.org/t/p/w500/${actor.profile_path}`\n            : IMAGE_PLACEHOLDER;\n          return (\n            <li key={actor.id} className={style.item}>\n              <img\n                src={imgUrl}\n                alt={actor.name}\n                className={style.actor__image}\n              />\n              <p className={style.actor__text}>{actor.name}</p>\n              <p className={style.character__text}>\n                Character: {actor.character}\n              </p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default MovieCast;\n"],"names":["KEY","URL","getTrendingMovies","axios","result","data","results","getMoviesBySearchQuery","searchQuery","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","useParams","useState","setCast","useEffect","fetchMovieCast","className","style","map","actor","imgUrl","profile_path","src","alt","name","character","id"],"sourceRoot":""}